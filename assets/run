
### PERFORMANCE CONTROL ###
set_val() {
    if busybox [ "`busybox find \"$1\" -prune -perm -200`" ]; then
        echo $2 > $1
    else
        busybox chmod a+w $1
        echo $2 > $1
        busybox chmod a-w $1
    fi
}
zramstart(){
local cpus=$1;
local val=$2;
if busybox [ -f /system/lib/modules/zram.ko ]; then
    if busybox [ -z "`busybox lsmod | busybox grep zram`" ]; then
        busybox insmod /system/lib/modules/zram.ko;
    fi;
    busybox modprobe zram zram_num_devices=$cpus;
fi;
ncpus=`busybox expr $cpus - 1`;
for i in `busybox seq 0 $ncpus`; do
    busybox echo $val > /sys/block/zram$i/disksize;
done;
for i in `busybox seq 0 $ncpus`; do
    busybox mkswap /dev/block/zram$i;
done;
for i in `busybox seq 0 $ncpus`; do
    busybox swapon /dev/block/zram$i;
done;
return;
}

zramstop(){
local cpus=$1;
if busybox [ "`busybox grep zram /proc/swaps`" != "" ]; then
ncpus=`busybox expr $cpus - 1`;
for i in `busybox seq 0 $ncpus`; do
    if busybox [ "`busybox grep zram$i /proc/swaps`" != "" ]; then
        busybox swapoff /dev/block/zram$i;
        #sleep 0.5;
        busybox echo 1 > /sys/block/zram$i/reset;
    fi;
done;
sleep 0.5;
busybox modprobe -rf zram;
fi;
return;
}
